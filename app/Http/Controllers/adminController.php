<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\addproduct;

class adminController extends Controller
{
    public function index()
    {
        return view('admin.addProduct');
    }
    public function addproduct(Request $request)
    {
        $validator = validator($request->all(), [
            'name' => 'required|unique:addproduct',
            'Description' => 'required',
            'price' => 'required',
            'image' => 'required|image', // Adding validation rule for image field
        ]);
        if ($validator->fails()) {
            // Validation failed, return back with error messages
            return back()->withErrors($validator)->withInput();
        }

        // Validation passed, proceed with creating the new addproduct instance
        $product = new addproduct();
        $product->name = request('name');
        $product->Description = request('Description');
        $product->price = request('price');
        // Assuming you're storing the image path in the database, you can store it here
        // $product->image = request()->file('image')->store('images');
        $product->image = $request->file('image')->store('images', 'public');
        // Adjust 'images' to your desired storage app_path()

        // After running the "" {{{php artisan storage:link}}} "" command, you can access the uploaded images using the URL generated by the asset() helper function, like so:

        $product->save();
        // Optionally, you can redirect the user after successfully creating the product
        return redirect()->route('admin.home')->with('success', 'Product created successfully');
    }











    public function viewproduct()
    {
        $product = addproduct::all();
        $data = compact('product');
        return view('admin.viewproduct')->with($data);
    }


    public function editproduct($id)
    {
        $product = addproduct::find($id);
        if (is_null($product)) {
            // user not fount
            return redirect('/admin/home');
        } else {
            $data = compact('product');
            return view("admin.editProduct")->with($data);
        }
    }


    public function updateProduct(Request $request, $id)
    {
        $product = addproduct::find($id);
        $product->name = $request->name;
        $product->Description = $request->Description;
        $product->price = $request->price;

        // $product->image = $request->file('image')->store('images', 'public');
        $product->save();
        return redirect('admin/home');
    }

    public function trash()
    {
        $product = addproduct::onlyTrashed()->get();
        $data = compact('product');
        return view("admin.trash")->with($data);
    }


    public function softdelete($id)
    {
        $product = addproduct::find($id);
        if (!is_null($product)) {
            $product->delete();
            return redirect('admin/home');
        }
        return redirect()->back();
    }

    public function Harddelete($id)
    {
        $product = addproduct::onlyTrashed()->find($id);
        if (!is_null($product)) {
            $product->forceDelete();
            return view('admin.trash');
        }
        return redirect()->back();
    }

    public function restore($id)
    {
        $product = addproduct::onlyTrashed()->find($id);
        if (!is_null($product)) {
            $product->restore();
            return redirect('/admin/home');
        }
        return redirect('/admin/home');
    }
}
